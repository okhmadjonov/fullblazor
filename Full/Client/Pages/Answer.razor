@page "/answer"
@using Full.Client.DTO
@using Full.Client.Service
@inject ApiServices ApiServices
@inject IJSRuntime JsRuntime
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject LocalStorageService LocalStorageService



    <style>
    

        ul {
            margin-bottom: 0;
            padding: 0 !important;
        }

        a {
            color: #000;
            text-decoration: none;
            cursor: pointer;
        }

        

        .contact__bg {
            background-image: url(https://thumbs.dreamstime.com/z/homework-word-writkboard-text-books-school-books-38372083.jpg?w=992);
            background-repeat: no-repeat;
            background-size: cover;
            background-position: top;
            height: 300px;
        }

            .contact__bg h1 {
                text-align: center;
                font-size: 62px;
                padding-top: 100px;
                color: black;
            }

      

        h1 {
            margin: 0;
        }

        p {
            margin: 0;
        }


        .social__logo {
            cursor: pointer;
        }

        .content {
            margin-top: 100px;
            margin-bottom: 130px;
        }

        .content__title {
            font-size: 32px;
            margin-bottom: 24px;
        }

        .content__descr {
            font-size: 18px;
            line-height: 28px;
            font-weight: 400;
            margin-bottom: 60px;
            overflow-wrap:break-word;
        }

        .answer {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 80px;
        }

            .answer div {
                position: relative;
                width: 900px;
                height: 400px;
                border: 3px solid #000;
                border-radius: 15px;
                opacity: 0.5;
                text-align: left;
                overflow: hidden;
                text-indent: 0%;
            }

            .answer textarea {
                width: 900px;
                height: 400px;
                position: absolute;
                right: 0;
                left: 0;
                bottom: 0;
                top: 0;
                padding: 30px;
            }

                .answer textarea:focus {
                    outline: none;
                }

            .answer button {
                padding: 24px 64px;
                background-color: #35A4D9;
                border-radius: 10px;
                border: none;
                color: #fff;
                cursor: pointer;
                margin-bottom: 100px;
            }

        .remark {
            display: flex;
            align-items: center;
            gap: 20px;
        }

        .remark__title {
            font-size: 28px !important;
            font-weight: 500 !important;
        }

        .remark p {
            font-size: 18px;
            font-weight: 400;
        }

        .remark__content {
            display: flex;
            flex-direction: column;
            gap: 43px;
        }

    </style>




<section class="contact__bg">
    <h1>Домашние задания</h1>
</section>
<section>
    <div class="container-s content">
        <h1 class="content__title">@task.Title</h1>
        <p class="content__descr">@task.Description</p>
        <div class="answer">
            <div>
                <textarea cols="100" rows="10" @bind="taskAnswerDto.Answer">

                    </textarea>
            </div>

            <button @onclick="Post">Отправить на проверку</button>
        </div>
        <div class="remark__content">
            <div class="remark">
                <p class="remark__title">Замечание к д/з:</p>
                <p style="color: #008000;">Домашнее задание выполнено отлично. Продолжайте в таком же духе!</p>
            </div>
            <div class="remark">
                <p class="remark__title">Замечание к д/з:</p>
                <p style="color: #FFC300;">Домашнее задание выполнено неполностью. Пожалуйста прочитайте инструкцию и выполните до конца</p>
            </div>
            <div class="remark">
                <p class="remark__title">Замечание к д/з:</p>
                <p style="color: #DA0000">Домашнее задание не выполнено!!!.</p>
            </div>
        </div>
    </div>
</section>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm" crossorigin="anonymous"></script>

@code {

    private TaskAnswerDTO taskAnswerDto = new TaskAnswerDTO();

    private string UserEmail { get; set; } = string.Empty;

    private string TaskId { get; set; } = string.Empty;

    private Full.Shared.Task task = new Full.Shared.Task();

    private async System.Threading.Tasks.Task GetTaskIdFromLocalStorage()
    {
        var taskId = await JsRuntime.InvokeAsync<string>("localStorage.getItem", "taskId");

        if (!string.IsNullOrEmpty(taskId))
        {
            TaskId = taskId;
        }
    }

    protected override async System.Threading.Tasks.Task OnInitializedAsync()
    {
        var email = await LocalStorageService.GetEmailFromLocalStorage();
        UserEmail = email;
        await GetTaskIdFromLocalStorage();
        if (string.IsNullOrEmpty(UserEmail))
        {
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            var result = await ApiServices.GetTask(TaskId);
            if (result is not null)
            {
                task = result;
            }   
        }
    }

    async System.Threading.Tasks.Task Post()
    {
        taskAnswerDto.TaskId = Convert.ToInt32(TaskId);
        ApiServices.AddAnswer(taskAnswerDto);
        await JsRuntime.InvokeAsync<object>("alert", "Your answer received and submitted to your teacher");
        NavigationManager.NavigateTo("/task");
    }
}
