@page "/user/course"
@using Full.Client.Service
@using Full.Shared
@inject HttpClient Http
@inject IJSRuntime JsRuntime
@inject NavigationManager NavigationManager
@inject ApiServices ApiServices
@inject LocalStorageService LocalStorageService


    <style>
   

    

        .contact__bg {
            background-image: url(https://images.pexels.com/photos/5553050/pexels-photo-5553050.jpeg?auto=compress&cs=tinysrgb&w=1600);
            background-repeat: no-repeat;
            background-size: cover;
            background-position: center;
            /* filter: brightness(40%); */
            height: 300px;
        }

            .contact__bg h1 {
                text-align: center;
                font-size: 62px;
                padding-top: 100px;
                color: white;
            }

  
  

        h1 {
            margin: 0;
        }

        p {
            margin: 0;
        }

        .footer__p {
            text-align: center;
            color: #545454;
            font-size: 12px;
            padding-bottom: 24px;
        }

        .social__logo {
            display: flex;
            gap: 20px;
            padding-top: 30px;
        }

        .footer__item a {
            cursor: pointer;
            color: #949393;
        }

        .social__logo {
            cursor: pointer;
        }


        .section__course {
            margin-top: 108px;
            margin-bottom: 150px;
        }

        .course__title {
            color: #000;
            font-size: 42px;
            text-align: center;
            margin-bottom: 72px;
        }

        .row {
            display: flex;
            gap: 30px;
            justify-content: center;
        }

        .col-4 {
            width: 380px;
            display: flex;
            flex-direction: column;
            gap: 10px;
            box-shadow: 0px 4px 50px 0px rgba(0, 0, 0, 0.10);
            padding: 0;
            cursor: pointer;
        }

            .col-4 img {
                width: 380px;
            }

            .col-4 h6 {
                color: #000;
                font-size: 24px;
                padding-left: 30px;
                margin: 0;
            }

            .col-4 p {
                padding-left: 30px;
                color: #000;
                font-size: 14px;
                padding-bottom: 25px;
            }

        .active {
            color: #113BA1 !important;
        }
    </style>



<section class="contact__bg">
    <h1>Мои курсы</h1>
</section>
<section class="section__course">
    <div class="container">
        <div class="row">
            @if (courses.Count <= 0)
            {
                <h1>No courses...</h1>
            }
            else
            {
                @foreach (var course in courses)
                {
                    <div class="col-4" @onclick="() => ToLesson(course)">
                        <img src="@course.ImageUrl" alt="@course.Title">
                        <h6>@course.Title</h6>
                        <p>@course.Description</p>
                    </div>
                }
            }
        </div>
    </div>
</section>


<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm" crossorigin="anonymous"></script>
<script>
    function clearLocalStorage() {
        localStorage.clear();
    }
</script>
@code {
    private string UserEmail { get; set; } = string.Empty;
    List<Course> courses = new List<Course>();


    protected override async System.Threading.Tasks.Task OnInitializedAsync()
    {
        var email = await LocalStorageService.GetEmailFromLocalStorage();
        UserEmail = email;
        if (string.IsNullOrEmpty(UserEmail))
        {
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            var result = await ApiServices.GetUserCourses(UserEmail);

            if (result != null)
            {
                courses = result;
            }
        }
    }
    async void ToLesson(Course course)
    {
        await JsRuntime.InvokeVoidAsync("sessionStorage.setItem", "courseId", course.Id);
        NavigationManager.NavigateTo("/lesson");
    }
}
